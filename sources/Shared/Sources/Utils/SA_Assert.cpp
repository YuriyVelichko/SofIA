/********************************************************************************************************/
/* SA_Assert.cpp																						*/
/*                                                                                                      */
/* Copyright Yuriy Velichko, 2011                                                                       */
/*                                                                                                      */
/********************************************************************************************************/

// Visual
#include <StdAfx.h>

// UTILS
#include <Shared/Utils/SA_Assert.h>


//////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Private Construction Methods
//////////////////////////////////////////////////////////////////////


/********************************************************************************************************/
SA_Assert::SA_Assert( void )
{

}

/********************************************************************************************************/
SA_Assert::SA_Assert( 
	SA_Assert&	inAssert )
{

}


//////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Methods
//////////////////////////////////////////////////////////////////////
			

/********************************************************************************************************/
void SA_Assert::Assert(
	bool				inStatmentValue,
	const char*			inStatment,
	const String&		inMessage )
{

}

/********************************************************************************************************/
void SA_Assert::Assert(
	void*				inStatmentValue,
	const char*			inStatment,
	const String&		inMessage )
{

}	

//////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Methods
//////////////////////////////////////////////////////////////////////


/********************************************************************************************************/
SA_Assert&  SA_Assert::Instance( void )
{
	static SA_Assert assertManager;
	return assertManager;
}